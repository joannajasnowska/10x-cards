/*
  This file contains the DTO and Command Model definitions for the application.
  These types are derived from the underlying database models (imported from './db/database.types')
  and fulfill the API plan specifications.
*/

import type { Database } from "./db/database.types";

// Derived entity types from the database
export type Flashcard = Database["public"]["Tables"]["flashcards"]["Row"];
export type Generation = Database["public"]["Tables"]["generations"]["Row"];
export type GenerationLog = Database["public"]["Tables"]["generation_logs"]["Row"];

// DTO for a single flashcard, mapping directly to the Flashcard entity.
export type FlashcardDTO = Pick<
  Flashcard,
  "id" | "front" | "back" | "source" | "generation_id" | "created_at" | "updated_at"
>;

// Pagination information DTO
export interface PaginationDTO {
  page: number;
  limit: number;
  total: number;
}

// Response DTO for listing flashcards
export interface FlashcardsListResponseDTO {
  data: FlashcardDTO[];
  pagination: PaginationDTO;
}

// Command Models & DTOs for creating flashcards
export type Source = "manual" | "ai-complete" | "ai-with-updates";
// DTO for manually created flashcard
export interface CreateFlashcardManualDTO {
  front: string; // Should not exceed 200 characters
  back: string; // Should not exceed 500 characters
  source: Source;
  generation_id: number | null; // Nullable for manual flashcards
}

// DTO for AI-generated flashcard (complete or with updates)
export interface CreateFlashcardAiDTO {
  front: string; // Should not exceed 200 characters
  back: string; // Should not exceed 500 characters
  source: Source;
  generation_id: number | null;
}

// Combined type for creating a flashcard
export type CreateFlashcardDTO = CreateFlashcardManualDTO | CreateFlashcardAiDTO;

// Command model for creating multiple flashcards
export interface CreateFlashcardsCommand {
  flashcards: CreateFlashcardDTO[];
}

// Command model for updating a flashcard
export type UpdateFlashcardCommand = Partial<{
  front: string; // Optional update; max 200 characters if provided
  back: string; // Optional update; max 500 characters if provided
  source: Source;
  generation_id: number | null;
}>;

// Command model for initiating flashcard generation
export interface InitiateGenerationCommand {
  source_text: string; // Must be between 1000 and 10000 characters
}

// DTO for a generation event derived from the Generation entity
export type GenerationDTO = Generation;

// DTO for flashcard proposals generated by the AI generation process
export interface GenerationFlashcardProposalDTO {
  front: string;
  back: string;
  source: "ai-complete"; // As per API plan, proposals are AI-complete type
}

// Response DTO for initiating generation, including the generation record and flashcard proposals
export interface InitiateGenerationResponseDTO {
  generation_id: number;
  flashcard_proposals: GenerationFlashcardProposalDTO[];
  ai_complete_count: number;
}

// Response DTO for listing generation events
export interface GenerationsListResponseDTO {
  data: GenerationDTO[];
  pagination: PaginationDTO;
}

// Response DTO for retrieving details of a specific generation event (includes flashcard proposals)
export type GenerationDetailsResponseDTO = Generation & {
  flashcards?: FlashcardDTO[]; // Optional flashcards if they exist
};

// DTO for a single generation log
export type GenerationLogDTO = Pick<
  GenerationLog,
  | "id"
  | "generation_id"
  | "error_code"
  | "error_message"
  | "model"
  | "source_text_hash"
  | "source_text_length"
  | "user_id"
  | "created_at"
>;
// Response DTO for listing generation logs
export interface GenerationLogsResponseDTO {
  data: GenerationLogDTO[];
}
